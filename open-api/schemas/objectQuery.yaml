type: object
required:
  - query
description: >
      This object contains the parameters used to issue a query against one or
      more data sets. The query is defined as a JSON string
properties:
  collectionIds:
    type: array
    items:
      type: string
    description: >
          A list of data set IDs. Specifying an empty list will cause the query to be issued to all data sets the user is allowed to query.
  query:
    type: string
    description: |
          A query represented as a JSON string

          ### Examples

          Search for a value in any field

          `{$any: fmv}`

          Search for a value in a specific field

          `{field.name: fmv}`

          Combine criteria usin AND

          `{$and: [{$any: fmv}, {$any: blue}]}`

          Combine criteria using OR

          `{$or: [{$any: fmv}, {$any: blue}]}`

          ### Range Queries

          A value in any field greater than or equal to 160

          `{$any: {$gte:160}}`

          Date field less than a specific date

          `{date_created: {$lt: â€œ1980-01-01T00:00:00.000Z}}`

          Geo Range

          `{fieldName: {$box: [[sw-lat, sw-long],[ne-lat, ne-long]]}}`

          E.g. `{fieldName: {$box :[[39.5, -104.9],[40, -104.5]]}}`

          Note that queries that combine a range with any other criteria, and
          queries that combine multiple ranges require Composite Indexes on
          the fields involved. See
          [additional docs](http://koverse.readthedocs.io/en/2.3/dev/dataset.html#compositeindexes)
          for information on building these.
  auths:
    type: array
    items:
      type: string
    description: >
        An optional comma separated list of authorization tokens. These are
        used for applying record-level filtering of data set results to
        records that have additional security labels applied.
  fieldsToReturn:
    type: array
    items:
      type: string
    description: >
          The list of field names to include in records. Other
          fields will be excluded. Omitting this parameter will cause
          all fields to be included in records.
  limit:
    type: integer
    description: The number of results to fetch in this call
  offset:
    type: integer
    description: The number of records in the result set to skip
example:
  collectionIds:
    - movies_20171107_172745_048
  query:
      title: jurassic
  fieldsToReturn:
    - movie_title
    - title_year
    - gross
  limit: 100
